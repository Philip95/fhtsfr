spring.kafka.properties.bootstrap.servers= localhost:9092
spring.kafka.consumer.properties.bootstrap.servers= localhost:9092

# Confluent Schema Registry
spring.kafka.properties.schema.registry.url=http://localhost:8081

# producer configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

# consumer configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.group-id=recipeavg

spring.kafka.streams.application-id=recipe
spring.kafka.streams.replication-factor=1

spring.datasource.url=jdbc:postgresql://localhost:5432/sfr
spring.datasource.username=postgres
spring.datasource.password=root

# Automate creating database
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.ddl-auto=update

topic.name=recipe
topic.partitions-num=3
topic.replication-factor=1

spring.kafka.streams.properties.default.key.serde=org.apache.kafka.common.serialization.Serdes$StringSerde
spring.kafka.streams.properties.default.value.serde=org.apache.kafka.common.serialization.Serdes$StringSerde


#spring.kafka.consumer.properties.max.poll.interval.ms.config=1000000



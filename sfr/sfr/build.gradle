buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath 'com.commercehub.gradle.plugin:gradle-avro-plugin:0.15.1'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.sfr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	jcenter()

	maven {
		url 'https://packages.confluent.io/maven'
	}
}

apply plugin: 'com.commercehub.gradle.plugin.avro'
apply plugin: 'idea'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.apache.avro:avro'
	// https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer
	implementation group: 'io.confluent', name: 'kafka-avro-serializer', version: '5.3.0'
	implementation 'io.confluent:kafka-streams-avro-serde:5.4.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-stream
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-stream', version: '4.0.1'


}

tasks.named('test') {
	useJUnitPlatform()
}
